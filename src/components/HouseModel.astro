
---
---
<script>
import * as THREE from 'three';
import { GLTFLoader } from 'three/addons/loaders/GLTFLoader.js';
import { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';



const scene = new THREE.Scene();
const bgColor = new THREE.Color(0xfff);

const loader = new GLTFLoader();


const camera = new THREE.PerspectiveCamera(75, window.innerWidth  / window.innerHeight, 0.1, 1000);
const renderer = new THREE.WebGLRenderer({ alpha: true, antialias: true });


const controls = new OrbitControls(camera, renderer.domElement);
controls.enableDamping = true; // Enable damping for smoother controls
controls.dampingFactor = 0.5; // Set the damping factor (adjust as needed)
controls.rotateSpeed = 0.2; // Adjust rotation speed
controls.enableZoom = false; // Enable zooming
controls.autoRotateSpeed = 0.2; // Set auto rotation speed
controls.maxPolarAngle = Math.PI / 2; // Limit vertical angle
controls.autoRotate = true; // Enable auto rotation


renderer.setSize(window.innerWidth , window.innerHeight );
renderer.setClearColor(0x000000, 0);


camera.position.z = 3.7;
camera.position.y = 0.5;

function animate() {
	requestAnimationFrame( animate );
    controls.update();

	renderer.render( scene, camera );
}
animate();
const houseModelCanvas = document.getElementById('house-model-canvas');
houseModelCanvas.appendChild( renderer.domElement );

loader.load( 'assets/3D-house.glb', function ( gltf ) {

	console.log("loading model")
	const model = gltf.scene;
	model.rotation.x = 0.2;
	model.rotation.y = 1.2;
	const scaleFactor = 0.4;
	model.scale.set(scaleFactor, scaleFactor, scaleFactor);
	model.position.y = -0.5;
	// model.position.x = -1.5;
	console.log(model);
	const selection = model.getObjectByName('e9f29f23d18e44ceace7924935af2df9fbx');
	console.log(selection);
	const ambientLight = new THREE.AmbientLight(0xffffff, 0.5); // Add ambient light
	scene.add(ambientLight);

	const directionalLight = new THREE.DirectionalLight(0xffffff, 1); // Add directional light
	directionalLight.position.set(1, 1, 1);
	scene.add(directionalLight);
	model.traverse( function ( child ) {

		if ( child instanceof THREE.Mesh) {
			console.log(child);
			// const newColor = new THREE.MeshBasicMaterial({ color: 0xff00ff }); // Red color
			// child.material = newColor;

		}

	} );



	scene.add(model);

}, undefined, function ( error ) {

	console.error( error );

} );


</script>
